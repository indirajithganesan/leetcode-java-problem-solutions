31. Next Permutation


class Solution {
    public void nextPermutation(int[] nums) {
        int n = nums.length;
        int i = n-2;// i--> Denotes index value This is for finding the pivot element

        while(i>=0 && nums[i]>=nums[i+1]){//This loop is for finding the pivot elements
            i--;
        }
        if(i>=0){//This must be greater than 0 then only execute the following code
          int j = n-1;
           while(nums[j]<= nums[i]){//This is for searching any greater number in the right side
            j--;
           }
           swap(nums,i,j);
        }
        reverse(nums,i+1);
    }
     public void swap(int nums[],int i,int j){//The following code is for swapping
      int temp = nums[i];
      nums[i] = nums[j];
      nums[j] = temp;
}
   public void reverse(int nums[],int start){//This and following code is for reverse
            int end =  nums.length-1;
            while(start<end){
                swap(nums,start,end);
                start++;
                end--;
            }
   }
  }
 