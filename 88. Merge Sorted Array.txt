88. Merge Sorted Array

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i = m - 1, j = n - 1, k = nums1.length - 1;//i -> last valid element for nums 1, j ->last valid element for nums 2,k -> represent the nums 1 last value
        while (i >= 0 && j >= 0) {
            if (nums1[i] > nums2[j]) {
                nums1[k] = nums1[i];
                k--;
                i--;
            } else {//j value is greater put into k
                nums1[k] = nums2[j];
                j--;
                k--;
            }
            
        }

        while (i >= 0) {//if nums 1 contain any element to add in nums 1[k]
            nums1[k] = nums1[i];
            i--;
            k--;
        }

        while (j >= 0) {//if nums 2 contain any element to add in nums 1[k]
            nums1[k] = nums2[j];
            j--;
            k--;
        }
    }
}
/**
Step 1
[1 2 3 0 0 0]
     i     k
[2 5 6]
     j

Step 2
[1 2 3 0 0 6]
     i   k
[2 5 6]
   j

Step 3
[1 2 3 0 5 6]
     i k
[2 5 6]
 j

Step 4
[1 2 3 3 5 6]
   i k
[2 5 6]
 j

Step 5
[1 2 2 3 5 6]
 i k
[2 5 6]
 j

Step 6
[1 2 2 3 5 6]
ik
  [2 5 6]
 j

Step 7
  [1 2 2 3 5 6]
ik
 [2 5 6]
j */
    