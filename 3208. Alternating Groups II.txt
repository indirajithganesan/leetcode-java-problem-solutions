3208. Alternating Groups II

//colors = [0,1,0,1,0], k = 3
//OP:3
class Solution {
    public int numberOfAlternatingGroups(int[] colors, int k) {
        int n = colors.length;//5
        int[] temp = new int[n + k - 1];//temp size->7
        System.arraycopy(colors, 0, temp, 0, n);//(0,1,0,1,0) Copy colors to temp
        System.arraycopy(colors, 0, temp, n, k - 1); //[0,1,0,1,0,0,1]  Copy first k-1 elements of colors to the end

        int count = 0;//number of valid alternating groups.(1 )
        int left = 0;//5
        
        for (int right = 0; right < temp.length; right++) {//0<7 1<7 2<7 3>7 4>7 5>7 6>7
            if (right > 0 && temp[right] == temp[right - 1]) {//5>0 && temp[5]==temp[4] 6>0 && temp[6]==temp[5]
                left = right;  
            }
            
            if (right - left + 1 >= k) {//4-1>=3 6-
                count++;  
            }
        }
//[0,1,0]: Valid (alternating), count = 1.
//[1,0,1]: Valid, count = 2.
//[0,1,0]: Valid, count = 3.
//[1,0,0]: Invalid (last two elements are the same).
//[0,0,1]: Invalid (first two elements are the same).
        return count;
    }
}